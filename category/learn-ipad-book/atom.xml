<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: learn-ipad-book | Learning iPad Programming]]></title>
  <link href="http://www.learningipadprogramming.com/category/learn-ipad-book/atom.xml" rel="self"/>
  <link href="http://www.learningipadprogramming.com/"/>
  <updated>2013-01-22T21:58:01-05:00</updated>
  <id>http://www.learningipadprogramming.com/</id>
  <author>
    <name><![CDATA[Kirby Turner]]></name>
    
  </author>

  
  <entry>
    <title type="html"><![CDATA[How To Ignore performSelector Leak Warning]]></title>
    <link href="http://www.learningipadprogramming.com/2012/04/03/how-to-ignore-performselector-leak-warning/"/>
    <updated>2012-04-03T00:00:00-04:00</updated>
    <id>http://www.learningipadprogramming.com/2012/04/03/how-to-ignore-performselector-leak-warning</id>
    <content type="html"><![CDATA[<p>In Listing 16.22 from the Learning iPad Programming book, I show how to invoke a method using <code>-performSelector:</code> where the selector is determined at runtime from a set of names stored in an NSArray. The implementation in Listing 16.22 could have been done a number of different ways, but I chose this approach to show how to set and perform a selector at runtime. However, the code produces a compiler warning message when ARC is used.</p>

<p>Because ARC is used and the selector is determined at run, the compiler generates a &#8220;possible memory leak&#8221; warning message. This warning is legitimate given that the selector is unknown at compile time and ARC is being used to manage memory.</p>

<p>At the time the code in Listing 16.22 was written, there was no way to ignore this warning message. That can be a good thing since explicitly ignoring a warning message from the compiler can be a bad thing. 99.9% of the time you want to fix or refactor your code so the warning message goes away. However, there are times when you know more than the compiler does, and the code in Listing 16.22 is one of those rare times.</p>

<p>In this particular case, each selector that can potentially be called will not cause a memory leak because each one returns a void. The compiler doesn&#8217;t know this, but you (as the programmer) know this to be true. So this warning message can safely be ignored. But how do you tell the compiler to ignore the <code>-performSelector:</code> possible memory leak warning so you don&#8217;t have to see the warning message each time you compile the project?</p>

<p>You can use tell clang to ignore the -performSelector leak warning by wrapping the <code>-performSelector:</code> call with a set of <code>#pragma</code> statements that temporarily ignore the warning for the code included in the block. Here is an example:</p>

<p><div class='bogus-wrapper'><notextile><div class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="kt">id</span><span class="o">=</span><span class="err">&#39;</span><span class="n">pragma_clang_diagnostic_push</span><span class="err">&#39;</span><span class="o">&gt;</span><span class="n">pragma</span> <span class="n">clang</span> <span class="n">diagnostic</span> <span class="n">push</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="kt">id</span><span class="o">=</span><span class="err">&#39;</span><span class="n">pragma_clang_diagnostic_ignored_warcperformselectorleaks</span><span class="err">&#39;</span><span class="o">&gt;</span><span class="n">pragma</span> <span class="n">clang</span> <span class="n">diagnostic</span> <span class="n">ignored</span> <span class="o">&amp;</span><span class="err">#</span><span class="mi">8220</span><span class="p">;</span><span class="o">-</span><span class="n">Warc</span><span class="o">-</span><span class="n">performSelector</span><span class="o">-</span><span class="n">leaks</span><span class="o">&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;&lt;</span><span class="n">span</span><span class="o">&gt;</span><span class="n">self</span> <span class="nl">performSelector:</span><span class="n">selector</span><span class="o">&lt;/</span><span class="n">span</span><span class="o">&gt;</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="kt">id</span><span class="o">=</span><span class="err">&#39;</span><span class="n">pragma_clang_diagnostic_pop</span><span class="err">&#39;</span><span class="o">&gt;</span><span class="n">pragma</span> <span class="n">clang</span> <span class="n">diagnostic</span> <span class="n">pop</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></div></notextile></div></p>

<p>So the code causing the warning message in Listing 16.22 for the PhotoWheel app now looks like this:</p>

<p><div class='bogus-wrapper'><notextile><div class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'> <span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">actionSheet:</span><span class="p">(</span><span class="n">UIActionSheet</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">actionSheet</span> <span class="nl">clickedButtonAtIndex:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="n">buttonIndex</span> <span class="p">{</span> <span class="c1">// Do nothing if the user taps outside the action // sheet (thus closing the popover containing the // action sheet). if (buttonIndex &amp;lt; 0) { return; }&lt;/em&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">NSMutableArray</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">names</span> <span class="o">=</span> <span class="o">&lt;</span><span class="n">span</span><span class="o">&gt;&lt;</span><span class="n">span</span><span class="o">&gt;</span><span class="n">NSMutableArray</span> <span class="n">alloc</span><span class="o">&lt;/</span><span class="n">span</span><span class="o">&gt;</span> <span class="n">init</span><span class="o">&lt;/</span><span class="n">span</span><span class="o">&gt;</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">if</span> <span class="p">(</span><span class="o">&lt;</span><span class="n">span</span><span class="o">&gt;</span><span class="n">actionSheet</span> <span class="n">tag</span><span class="o">&lt;/</span><span class="n">span</span><span class="o">&gt;</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="o">&lt;</span><span class="n">span</span><span class="o">&gt;</span><span class="n">names</span> <span class="nl">addObject:</span><span class="err">@</span><span class="o">&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="p">;</span><span class="n">confirmDeletePhotoAlbum</span><span class="o">&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">span</span><span class="o">&gt;</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span> <span class="k">else</span> <span class="p">{</span> <span class="kt">BOOL</span> <span class="n">hasCamera</span> <span class="o">=</span> <span class="o">&lt;</span><span class="n">span</span><span class="o">&gt;</span><span class="n">UIImagePickerController</span> <span class="nl">isSourceTypeAvailable:</span><span class="n">UIImagePickerControllerSourceTypeCamera</span><span class="o">&lt;/</span><span class="n">span</span><span class="o">&gt;</span><span class="p">;</span> <span class="k">if</span> <span class="p">(</span><span class="n">hasCamera</span><span class="p">)</span> <span class="o">&lt;</span><span class="n">span</span><span class="o">&gt;</span><span class="n">names</span> <span class="nl">addObject:</span><span class="err">@</span><span class="o">&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="p">;</span><span class="n">presentCamera</span><span class="o">&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">span</span><span class="o">&gt;</span><span class="p">;</span> <span class="o">&lt;</span><span class="n">span</span><span class="o">&gt;</span><span class="n">names</span> <span class="nl">addObject:</span><span class="err">@</span><span class="o">&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="p">;</span><span class="n">presentPhotoLibrary</span><span class="o">&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">span</span><span class="o">&gt;</span><span class="p">;</span> <span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">SEL</span> <span class="n">selector</span> <span class="o">=</span> <span class="n">NSSelectorFromString</span><span class="p">(</span><span class="o">&lt;</span><span class="n">span</span><span class="o">&gt;</span><span class="n">names</span> <span class="nl">objectAtIndex:</span><span class="n">buttonIndex</span><span class="o">&lt;/</span><span class="n">span</span><span class="o">&gt;</span><span class="p">);</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="kt">id</span><span class="o">=</span><span class="err">&#39;</span><span class="n">pragma_clang_diagnostic_push</span><span class="err">&#39;</span><span class="o">&gt;</span><span class="n">pragma</span> <span class="n">clang</span> <span class="n">diagnostic</span> <span class="n">push</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="kt">id</span><span class="o">=</span><span class="err">&#39;</span><span class="n">pragma_clang_diagnostic_ignored_warcperformselectorleaks</span><span class="err">&#39;</span><span class="o">&gt;</span><span class="n">pragma</span> <span class="n">clang</span> <span class="n">diagnostic</span> <span class="n">ignored</span> <span class="o">&amp;</span><span class="err">#</span><span class="mi">8220</span><span class="p">;</span><span class="o">-</span><span class="n">Warc</span><span class="o">-</span><span class="n">performSelector</span><span class="o">-</span><span class="n">leaks</span><span class="o">&amp;</span><span class="err">#</span><span class="mi">8221</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;&lt;</span><span class="n">span</span><span class="o">&gt;</span><span class="n">self</span> <span class="nl">performSelector:</span><span class="n">selector</span><span class="o">&lt;/</span><span class="n">span</span><span class="o">&gt;</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="kt">id</span><span class="o">=</span><span class="err">&#39;</span><span class="n">pragma_clang_diagnostic_pop</span><span class="err">&#39;</span><span class="o">&gt;</span><span class="n">pragma</span> <span class="n">clang</span> <span class="n">diagnostic</span> <span class="n">pop</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></div></notextile></div></p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Xcode 4.2 on Snow Leopard]]></title>
    <link href="http://www.learningipadprogramming.com/2012/03/24/using-xcode-4-2-on-snow-leopard/"/>
    <updated>2012-03-24T00:00:00-04:00</updated>
    <id>http://www.learningipadprogramming.com/2012/03/24/using-xcode-4-2-on-snow-leopard</id>
    <content type="html"><![CDATA[<p>A few people have recently mentioned to me that they are still running Snow Leopard (Mac OS X 10.6). The latest version of Xcode requires Lion (Mac OS X 10.7), however, Xcode 4.2 for Snow Leopard is still available for download from the Apple web site.</p>

<p>Learning iPad Programming was written based on Xcode 4.2, so everything covered in the book, with one exception, works with Xcode 4.2 on Snow Leopard. The one exception is the &#8220;Allows External Storage&#8221; flag in Core Data. This flag is discussed in Chapter 13 on Page 308, and the flag requires Lion. Compile errors are generated if you set this flag while running on Snow Leopard. Not to worry. You can still build the app without setting this flag. The app, after all, is a sample app so for the purpose of learning it is okay to not use this flag when using Xcode 4.2 on Snow Leopard.</p>

<p>To download Xcode 4.2 for Snow Leopard, go to <a href='https://developer.apple.com/downloads/'>https://developer.apple.com/downloads/</a> and sign in with your Apple Developer ID. In the search box, type &#8220;Xcode 4.2&#8221;. The search results will show Xcode 4.2 for Snow Leopard (see the screenshot below). Use this version of Xcode if you are still running on Snow Leopard.</p>

<p><img src='/images/blog/2012-03-24/Downloads.png' alt='Downloads' /></p>

<p>As an alternative, you can sign into the <a href='https://developer.apple.com/devcenter/ios/'>iOS Dev Center</a> and scroll down to the Downloads area to find the download link to Xcode 4.2 for Snow Leopard.</p>

<p><img src='/images/blog/2012-03-24/iOS-Dev-Center-Apple-Developer.png' alt='iOS Dev Center Apple Developer' /></p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Is There an Issue with the Print Version]]></title>
    <link href="http://www.learningipadprogramming.com/2012/03/24/is-there-an-issue-with-the-print-version/"/>
    <updated>2012-03-24T00:00:00-04:00</updated>
    <id>http://www.learningipadprogramming.com/2012/03/24/is-there-an-issue-with-the-print-version</id>
    <content type="html"><![CDATA[<p>Learning iPad Programming has received two negative reviews on Amazon, both concerning the print quality of the book. I&#8217;ve received a number of inquires because of these two reviews, so I decided to make a blog posting.</p>

<p><strong>In short, there is nothing wrong with the print quality of the book.</strong> The paper stock is a little thin, but beyond that, the print version is of the same high quality as other programming books from Addison Wesley. This of course is my opinion, and my opinion is based on reading the book myself and comparing it to the many other programming book I own.</p>

<p>That said, I would like to address the concerns mentioned in the two reviews, which are available <a href='http://www.amazon.com/review/R19TKCFJHSKQUW/ref=cm_cr_pr_perm?ie=UTF8&amp;amp;ASIN=0321750403&amp;amp;nodeID=&amp;amp;tag=&amp;amp;linkCode='>here</a> and <a href='http://www.amazon.com/review/R2XCRENVK65S89/ref=cm_cr_pr_perm?ie=UTF8&amp;amp;ASIN=0321750403&amp;amp;nodeID=&amp;amp;tag=&amp;amp;linkCode='>here</a>.</p>

<h2 id='responding_to_the_reviews'>Responding to the Reviews</h2>

<p>The first review says, &#8220;This print version uses very small fonts, the figures are poor black/grey/white renderings of color images, and the paper is thin enough that the other side of the page is faintly visible.&#8221; Let me address each point.</p>

<p>&#8220;Very small fonts.&#8221; I disagree with this. The font size is the same size found in many other programming books including those from Addison Wesley.</p>

<p>&#8220;The figures are poor black/grey/white renderings of color images.&#8221; It is true that figure images are greyscale version of color images. The images are screenshots taken from my MacBook Pro and iPad, which means the images were originally color. But the greyscale rendering of the images is on par with other print books that I have compared. I guess it could be a matter of personal preference, but I have no issue with the quality of the greyscale images. That said, I wish the figure images were printed in full color, but that would only raise the cost of the book without providing additional value.</p>

<p>&#8220;The paper is thin enough that the other side of the page is faintly visible.&#8221; This is true, and it&#8217;s my one and only complaint about the print book. The paper stock is a little thin. The issue has been brought to the publisher&#8217;s attention, and they plan to use a thicker paper stock in the future. When that will happen is something I don&#8217;t know, but I have been told future printings will use thicker paper stock. (As of this writing, there have been two printings of the book, both using the thinner paper stock.)</p>

<p>As for being able to see print from the other side, yes, this is true, but it is faint and I only notice it in white space areas. It does not district me from reading the book, but <a href='http://netforbeginners.about.com/od/xyz/f/What-Is-YMMV.htm'>YMMV</a>. I&#8217;ll also point out that a number of other print books do the same. For example, while comparing my book to <a href='http://www.amazon.com/gp/product/0321535022/ref=as_li_ss_il?ie=UTF8&amp;amp;tag=whitepeaksoft-20&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=0321535022'>Cocoa Design Patterns</a>, I noticed print from the other side is slightly visible and it uses a slightly thicker paper stock. In my opinion, this is something that happens when black ink is printed on most white paper stock. I even notice this on printouts from my home printer using standard quality inkjet paper stock.</p>

<p>The second review has this to say, &#8220;I became more and more frustrated with trying to read the small type printed in ink so light that it looked as if the printing press had run out of ink. The code listing font is even more difficult to read.&#8221;</p>

<p>Again, the font size is the same size found in many other books from Addison Wesley, and the code listings use the some font size. The only difference is the font style. A monospace font is used for the source code listing.</p>

<p>The light ink that &#8220;looked as if the printing press has run out of ink&#8221;, well, all I can say is it is possible that the reviewer did receive a defective book. However, I have reviewed 35 print versions from the first printing, and I did not find a single book with the issue of light ink. Again, it&#8217;s possible the individual received a defective book, but defective books are not common.</p>

<p>So is there a problem with the print version of Learning iPad Programming? Absolutely not. The paper stock is thin, and I wish that was not the case, but it does not, in my opinion, take away from the readability of the book. As for the font size, quality of figure images, etc, well, that&#8217;s probably a matter of preference.</p>

<h2 id='how_to_decide'>How to Decide</h2>

<p>How can you decide if the print quality is suitable for you? Here are some options for you:</p>

<p>1) Visit a brick and mortar book store and flip through the pages yourself. I know this is not an option for everyone especially those living outside the U.S., but for those living nearing a Barnes and Noble, stop by the store and compare the print quality to that of other programming books. I&#8217;m sure you will see little to no difference.</p>

<p>2) Take a look at this <a href='http://ptgmedia.pearsoncmg.com/images/9780321750402/samplepages/0321750403.pdf'>sample PDF</a>. While not exactly the same as having a printed copy of the book in your hands, you can see what fonts are used, font sizes, the quality of the figure images, and so on. It is the best representation of the print book without holding the actual book in your hands.</p>

<p>3) Take a look at the photos posted below. These are photographs of random pages from the book. I&#8217;m no photographer, so the pictures could be a little better - a lot better in fact - but as you can see the font size and print quality are very readable.</p>

<p>4) Buy the ebook edition. The book is available in the <a href='http://amzn.to/ipadprogbook-kindle'>Kindle Book Store</a>, iBooks Store, and from <a href='http://www.informit.com/store/product.aspx?isbn=0321750403'>informIT.com</a> as PDF and epub. This option also saves trees, and it has become my prefer way to purchase new books.</p>

<p>Compare the <a href='http://ptgmedia.pearsoncmg.com/images/9780321750402/samplepages/0321750403.pdf'>sample PDF</a> and photos below then decide for yourself if the print version is suitable for you. And if by chance you happen to receive a deflective book then let me know. Send me specific page numbers, and I can request a warehouse inspection. Or send me the book, and I&#8217;ll make sure you receive a good copy.</p>

<h2 id='all_feedback_is_good_feedback'>All Feedback is Good Feedback</h2>

<p>One last point to make. In no way am I saying the two individuals should not have posted the reviews. On the contrary, all feedback, good and bad, is welcome. All feedback is good feedback in my opinion. And if these individuals had not posted the reviews then the publisher would not have agreed to use a thicker paper stock in the future. So post your review, good or bad, to Amazon. It will help make this book and others that much better.</p>

<p><img src='/images/blog/2012-03-24/IMG_3920.jpg' alt='' /></p>

<p><img src='/images/blog/2012-03-24/IMG_3924.jpg' alt='' /></p>

<p><img src='/images/blog/2012-03-24/IMG_3926.jpg' alt='' /></p>

<p><img src='/images/blog/2012-03-24/IMG_3928.jpg' alt='' /></p>

<p><img src='/images/blog/2012-03-24/IMG_3929.jpg' alt='' /></p>

<p><img src='/images/blog/2012-03-24/IMG_3933.jpg' alt='' /></p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning iPad Programming LiveLessons Available for Purchase]]></title>
    <link href="http://www.learningipadprogramming.com/2012/03/13/learning-ipad-programming-livelessons-available-for-purchase/"/>
    <updated>2012-03-13T00:00:00-04:00</updated>
    <id>http://www.learningipadprogramming.com/2012/03/13/learning-ipad-programming-livelessons-available-for-purchase</id>
    <content type="html"><![CDATA[<p>I learned today that the <a href='http://www.informit.com/store/product.aspx?isbn=0321821661'>Learning iPad Programming LiveLessons</a> videos are available for purchase from the <a href='http://www.informit.com/'>InformIT web site</a>. So you don&#8217;t need a Safari Books Online account to purchase and enjoy these training videos.</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning iPad Programming LiveLessons]]></title>
    <link href="http://www.learningipadprogramming.com/2012/03/12/learning-ipad-programming-livelessons/"/>
    <updated>2012-03-12T00:00:00-04:00</updated>
    <id>http://www.learningipadprogramming.com/2012/03/12/learning-ipad-programming-livelessons</id>
    <content type="html"><![CDATA[<img src='/images/blog/2012-03-12/9780132981163_s.jpg' align='left' border='0' height='174' vspace='10' width='145' hspace='10' />
<p>I should mention not all topics found in the book are covered in the LiveLessons. There simply wasn&#8217;t enough time to cover everything. Besides, covering everything may have resulted in 20 hours of videos instead of the 8 and half hours available today. Still, if you are new to iPad programming, and you are looking for an alternative way to learn iPad programming then check out <a href='http://bit.ly/ipadlivelessons'>Learning iPad Programming LiveLessons</a>.</p>

<p>Attention iPad users with a Safari Books Online account: You can watch the Learning iPad Programming LiveLessons from your iPad using the <a href='http://click.linksynergy.com/fs-bin/click?id=joxFicmfXq8&amp;amp;subid=&amp;amp;offerid=146261.1&amp;amp;type=10&amp;amp;tmpid=3909&amp;amp;RD_PARM1=http%3A%2F%2Fitunes.apple.com%2Fus%2Fapp%2Fsafari-to-go%2Fid385824712%3Fmt%3D8'>Safari To Go</a> iPad app.</p>]]></content>
  </entry>
  
</feed>