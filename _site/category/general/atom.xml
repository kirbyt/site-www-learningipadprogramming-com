<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: general | Learning iPad Programming]]></title>
  <link href="http://www.learningipadprogramming.com/category/general/atom.xml" rel="self"/>
  <link href="http://www.learningipadprogramming.com/"/>
  <updated>2013-01-20T01:36:54-05:00</updated>
  <id>http://www.learningipadprogramming.com/</id>
  <author>
    <name><![CDATA[Kirby Turner]]></name>
    
  </author>

  
  <entry>
    <title type="html"><![CDATA[Class Declaration versus Class Definition]]></title>
    <link href="http://www.learningipadprogramming.com/2012/07/26/class-declaration-versus-class-definition/"/>
    <updated>2012-07-26T00:00:00-04:00</updated>
    <id>http://www.learningipadprogramming.com/2012/07/26/class-declaration-versus-class-definition</id>
    <content type="html"><![CDATA[<p>A reader sent me an outstanding question. He pointed out that in chapter 4 of Learning iPad Programming, I wrote:</p>

<p>&#8220;To define a class you use @interface. In Listing 4.2, the CoinTosser class definition starts with the line @interface CoinTosser : NSObject. @interface is Objective-C syntax that tells the compiler that what follows is a class definition. CoinTosser is the name of the class. The colon character separates the class name from the name of the superclass. The new class inherits properties and methods from the superclass. The class definition starts with @interface and ends at the first occurrence of @end. This tells the compiler it has reached the end of the class definition.&#8221;</p>

<p>The reader asked, &#8220;Shouldn&#8217;t class definition be class declaration?&#8221; It turns out, class definition is correct.</p>

<p>While many programmers might use declaration and definition interchangeability, there are subtle differences in C and C++. And since Objective-C is a superset of C, those subtle differences apply.</p>

<p>A class <strong>declaration</strong> tells the compiler that a class exists. A class <strong>definition</strong> tells the compiler all the needed information to create an instance of the class. It tells the compiler about its member functions, properties, and so on. With Objective-C, the difference between class declaration and definition can be seen in the syntax.</p>

<p><code>@class className</code> declares a class, so it&#8217;s a class declaration. It tells the compiler the name of a class. This is also known as a &#8220;forward declaration.&#8221;</p>

<p><code>@interface className</code> and its contents defines the class, so it&#8217;s a class definition. It tells the compiler all it needs to know about the class, how to create an instance, what properties and methods are contained in the class, and so on.</p>

<p>Here are a couple of additional links that explain the differences as seen in C and C++:</p>
<ul>
<li><a href='http://www.daniweb.com/software-development/cpp/threads/143198/difference-between-a-class-declaration-and-a-class-definition'>http://www.daniweb.com/software-development/cpp/threads/143198/difference-between-a-class-declaration-and-a-class-definition</a></li>
<li><a href='http://www.cprogramming.com/declare_vs_define.html'>http://www.cprogramming.com/declare_vs_define.html</a></li>
</ul>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Appsterdam Visit]]></title>
    <link href="http://www.learningipadprogramming.com/2012/06/06/my-appsterdam-visit/"/>
    <updated>2012-06-06T00:00:00-04:00</updated>
    <id>http://www.learningipadprogramming.com/2012/06/06/my-appsterdam-visit</id>
    <content type="html"><![CDATA[<p>A couple of weeks ago I had the pleasure of visiting Amsterdam with my family. Amsterdam is a beautiful city with great restaurants and super friendly people. Getting around Amsterdam is really easy. We walked most of the time, but found the trains to be convenient when we wanted to return to the hotel quickly.</p>
<img src='http://learnipadprogramming.com/files/2012/06/appsterdam-logo-smaller.png' border='0' height='96' style='float:left' width='125' alt='Appsterdam logo smaller' /><a href='http://mur.mu.rs/?p=196'>What is Appsterdam</a>
<p>As luck would have it, I had an opportunity to speak at one of the Appsterdam luncheons, and I attended a social gathering later that evening. This gave me a chance to meeting many of the local Appsterdamers, which to my surprise are from all over the world. In fact, I met a number of Americans who now call Amsterdam home. Meeting this international group of app makers proved to me that Amsterdam is not only a great place to live, it&#8217;s a great place to run an indie software company. And if it wasn&#8217;t for my love and desire to live in a ski town, I might try to convenience my wife we need to move there. While moving there is not an option for us, extended stays most certainly are, and I hope to make it happen (hint, hint to my wife).</p>

<p>While traveling abroad is not easy for everyone - the airfare alone can be costly - there is a way to get a taste of Appsterdam right here in the States. In San Francisco during next week&#8217;s WWDC, Appsterdam will be hosting the <a href='http://www.robelkin.com/wwdc/'>Appsterdam WWDC HQ</a>, a free, week long co-working space (June 11 through 15) and daily talks from <a href='http://www.robelkin.com/wwdc/speakers.html'>outstanding speakers</a>. Appsterdam WWDC HQ is open to all. A WWDC badge is not required.</p>

<p>If you are in SF during WWDC, with or without a badge, I encourage you to stop by <a href='http://www.robelkin.com/wwdc/'>Appterdam WWDC HQ</a> and get a taste for what this organization and movement has to offer app markers.</p>]]></content>
  </entry>
  
</feed>